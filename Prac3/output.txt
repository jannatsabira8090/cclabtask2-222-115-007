Enter code (Ctrl+D to finish):
include -> IDENTIFIER
< -> ASSIGN/RELATIONAL_OP
stdio -> IDENTIFIER
h -> IDENTIFIER
> -> ASSIGN/RELATIONAL_OP
int -> KEYWORD
main -> IDENTIFIER
( -> LPAREN
) -> RPAREN
{ -> LBRACE
int -> KEYWORD
num -> IDENTIFIER
, -> COMMA
sum -> IDENTIFIER
= -> ASSIGN/RELATIONAL_OP
0 -> INT_LITERAL
; -> SEMICOLON
printf -> IDENTIFIER
( -> LPAREN
"Enter 5 integers:\n" -> STRING_LITERAL
) -> RPAREN
; -> SEMICOLON
for -> KEYWORD
( -> LPAREN
int -> KEYWORD
i -> IDENTIFIER
= -> ASSIGN/RELATIONAL_OP
1 -> INT_LITERAL
; -> SEMICOLON
i -> IDENTIFIER
<= -> RELATIONAL_OP
5 -> INT_LITERAL
; -> SEMICOLON
i -> IDENTIFIER
++ -> ARITHMETIC_OP
) -> RPAREN
{ -> LBRACE
printf -> IDENTIFIER
( -> LPAREN
"Number %d: " -> STRING_LITERAL
, -> COMMA
i -> IDENTIFIER
) -> RPAREN
; -> SEMICOLON
scanf -> IDENTIFIER
( -> LPAREN
"%d" -> STRING_LITERAL
, -> COMMA
& -> ADDRESS_OP
num -> IDENTIFIER
) -> RPAREN
; -> SEMICOLON
sum -> IDENTIFIER
+ -> ARITHMETIC_OP
= -> ASSIGN/RELATIONAL_OP
num -> IDENTIFIER
; -> SEMICOLON
if -> IDENTIFIER
( -> LPAREN
num -> IDENTIFIER
2 -> INT_LITERAL
== -> RELATIONAL_OP
0 -> INT_LITERAL
) -> RPAREN
{ -> LBRACE
printf -> IDENTIFIER
( -> LPAREN
"It's Even!\n" -> STRING_LITERAL
) -> RPAREN
; -> SEMICOLON
} -> RBRACE
else -> IDENTIFIER
{ -> LBRACE
printf -> IDENTIFIER
( -> LPAREN
"It's Odd!\n" -> STRING_LITERAL
) -> RPAREN
; -> SEMICOLON
} -> RBRACE
} -> RBRACE
printf -> IDENTIFIER
( -> LPAREN
"\nTotal Sum = %d\n" -> STRING_LITERAL
, -> COMMA
sum -> IDENTIFIER
) -> RPAREN
; -> SEMICOLON
return -> KEYWORD
0 -> INT_LITERAL
; -> SEMICOLON
} -> RBRACE
